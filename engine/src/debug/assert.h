#pragma once

#include <core/defines.h>
#include <core/logger.h>

#if DEBUG_FLAG
    /*
        @brief Проверка утверждения с остановкой программы при ошибке в отладочной сборке.
        @note Если выражение ложно: выводит фатальную ошибку с текстом условия, сообщением, файлом и строкой
              и останавливает выполнение в отладчике (если он подключен) или аварийно завершает программу.
        @param expr Проверяемое выражение (должно быть true в нормальной ситуации).
        @param message Сообщение об ошибке для вывода в лог.
    */
    #define ASSERT(expr, message)                                                    \
    do {                                                                             \
        if(!(expr))                                                                  \
        {                                                                            \
            LOG_FATAL("Assertion failed: '%s' with message: '%s'.", #expr, message); \
            DEBUG_BREAK();                                                           \
        }                                                                            \
    } while(false)
#else
    /*
        @brief Проверка утверждения с остановкой программы при ошибке в отладочной сборке.
        @note Если выражение ложно: выводит фатальную ошибку с текстом условия, сообщением, файлом и строкой
              и останавливает выполнение в отладчике (если он подключен) или аварийно завершает программу.
        @param expr Проверяемое выражение (должно быть true в нормальной ситуации).
        @param message Сообщение об ошибке для вывода в лог.
    */
    #define ASSERT(expr, message) ((void)0)
#endif
