/*
    @file systimer.h
    @brief Кросс-платформенный интерфейс для работы с системным таймером.
    @author Дмитрий Скляр.
    @version 1.0
    @date 23-08-2025

    @license Лицензия Apache, версия 2.0 («Лицензия»);
          Вы не имеете права использовать этот файл без соблюдения условий Лицензии.
          Копию Лицензии можно получить по адресу http://www.apache.org/licenses/LICENSE-2.0
          Если иное не предусмотрено действующим законодательством или не согласовано в письменной форме,
          программное обеспечение, распространяемое по Лицензии, распространяется на условиях «КАК ЕСТЬ»,
          БЕЗ КАКИХ-ЛИБО ГАРАНТИЙ ИЛИ УСЛОВИЙ, явных или подразумеваемых. См. Лицензию для получения
          информации о конкретных языках, регулирующих разрешения и ограничения по Лицензии.

    @note Реализации функций являются платформозависимыми и находятся в соответствующих
          platform/ модулях (windows, linux и т.д.).

    @note Для корректной работы необходимо предварительно инициализировать (в указанном порядке):
            - Подсистему консоли platform_console_initialize()
            - Подсистему таймера platform_systimer_initialize()
*/

#pragma once

#include <core/defines.h>

/*
    @brief Инициализирует подсистему для работы с таймером.
    @note Должна быть вызвана один раз при старте приложения.
    @warning Не thread-safe. Должна вызываться из основного потока.
    @return true - инициализация успешна, false - произошла ошибка.
*/
API bool platform_systimer_initialize();

/*
    @brief Завершает работу подсистемы для работы с таймером.
    @note Должна быть вызвана при завершении приложения.
    @warning Не thread-safe. Должна вызываться из основного потока.
*/
API void platform_systimer_shutdown();

/*
    @brief Проверяет, была ли инициализирована подсистема для работы с таймером.
    @note Может использоваться для проверки состояния подсистемы перед вызовом других функций.
    @warning Не thread-safe. Должна вызываться из того же потока, что и инициализация/завершение.
    @return true - подсистема инициализирована и готова к работе, false - подсистема не инициализирована.
*/
API bool platform_systimer_is_initialized();

/*
    @brief Получает текущее значение системного таймера высокого разрешения.
    @note Thread-safe, т.к. функция использует только чтение.
    @return Значение системного таймера с высокой точностью в секундах.
*/
API f64 platform_systimer_now();
