#pragma once

#include <core/defines.h>

/*
    @brief Получает количество символов в строке (без учета завершающего нуль-символа).
    @note Поддерживаются строки в кодировках ANSI/ASCII. Для UTF-8 используйте специальные функции.
    @param str Указатель на нуль-терминированную строку. Если nullptr, возвращает 0.
    @return Количество символов в строке или 0, если str равен nullptr.
*/
API u64 platform_string_length(const char* str);

/*
    @brief Вычисляет длину отформатированной строки без фактического форматирования.
    @note Функция полезна для предварительного определения размера буфера.
    @param format Строка формата в стиле printf. Не может быть nullptr.
    @param args Указатель на список аргументов переменной длины (va_list).
    @return Длина результирующей строки (без учета завершающего нуль-символа) или -1 в случае ошибки.
*/
API i32 platform_string_format_length(const char* format, void* args);

/*
    @brief Форматирует строку с использованием указателя на списк аргументов переменной длины.
    @note Для безопасного использования убедитесь, что dst достаточно велик для хранения результата.
    @param dst Буфер для записи результата. Не может быть nullptr.
    @param length Размер буфера dst, включая место для завершающего нуль-символа.
    @param format Строка формата в стиле printf. Не может быть nullptr.
    @param args Указатель на список аргументов переменной длины (va_list).
    @return Количество записанных символов (без учета завершающего нуль-символа) или -1 в случае ошибки.
*/
API i32 platform_string_format_va(char* dst, u64 length, const char* format, void* args);

/*
    @brief Форматирует строку с переменным числом аргументов.
    @note Для безопасного использования убедитесь, что dst достаточно велик для хранения результата.
    @param dst Буфер для записи результата. Не может быть nullptr.
    @param length Размер буфера dst, включая место для завершающего нуль-символа.
    @param format Строка формата в стиле printf. Не может быть nullptr.
    @param ... Аргументы для подстановки в строку формата.
    @return Количество записанных символов (без учета завершающего нуль-символа) или -1 в случае ошибки.
*/
API i32 platform_string_format(char* dst, u64 length, const char* format, ...);
